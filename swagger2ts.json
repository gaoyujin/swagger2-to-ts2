{
  "swaggerVersion": "2.0", // 支持的swagger版本
  "fileMode": "paths", // 生成文件的方式  info、paths（目前只支持paths模式）
  "createServe": true, // 为服务单独创立文件夹 (会根据swagger的info对象中的termsOfService属性生成文件夹，或者url域名的第一个字段)
  "pathRoute": ["/api/", "/"], // 在 paths 模式中，截取不同文件的路径（默认分割为【'/admin/api/', '/api/', '/'】）
  "onlyPath": ["/api/event/"], // 只生成某个路径 这个跟excludeRoute属性是互斥的
  "excludeRoute": [], // 排除那些路径不做生成处理
  "template": "default", // 模板类型，目前只有default类型的模板，是基于公司的PC端脚手架配置
  "models": {
    "isCreate": true, // 是否创建
    "dir": "entity", // 模型添加的目录，相对项目src来说
    "isCover": false, // 是否覆盖，存在则不做处理，不存在则创建
    "commonResponse": "itemResult", // 对象返回模型
    "pageResponse": "pageResult", // 分页返回模型
    "listResponse": "listResult", // 列表返回模型
    "utilsPath": "/@/models/httpResult" // 通用实体的地址
  },
  "api": {
    "isCreate": true, // 是否创建
    "dir": "api", // 模型添加的目录，相对项目src来说
    "isCover": false, // 是否覆盖
    "isCreateUse": true, // 是否生成调用文件
    "httpPath": "/@/utils/http", // axios的封装类地址
    "messagePath": "/@/utils/message/index" // 消息提示的路径  errorMessage 、warnMessage 、successMessage
  },
  "fileType": "ts", // ts 文件  ts 、js（目前只支持ts模式，程序不会使用该属性）
  "httpReplace": true // 是否 https 替换成 http
}
